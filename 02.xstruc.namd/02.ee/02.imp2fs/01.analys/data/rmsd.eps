%!PS-Adobe-2.0 EPSF-2.0
%%Title: rmsd.eps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Aug 29 17:21:37 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 75.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rmsd.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (dale)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 29 17:21:37 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
0.100 UL
LTb
860 640 M
63 0 V
5976 0 R
-63 0 V
740 640 M
( 0) Rshow
0.100 UL
LTb
860 1273 M
63 0 V
5976 0 R
-63 0 V
-6096 0 R
( 1) Rshow
0.100 UL
LTb
860 1906 M
63 0 V
5976 0 R
-63 0 V
-6096 0 R
( 2) Rshow
0.100 UL
LTb
860 2540 M
63 0 V
5976 0 R
-63 0 V
-6096 0 R
( 3) Rshow
0.100 UL
LTb
860 3173 M
63 0 V
5976 0 R
-63 0 V
-6096 0 R
( 4) Rshow
0.100 UL
LTb
860 3806 M
63 0 V
5976 0 R
-63 0 V
-6096 0 R
( 5) Rshow
0.100 UL
LTb
860 4439 M
63 0 V
5976 0 R
-63 0 V
-6096 0 R
( 6) Rshow
0.100 UL
LTb
860 640 M
0 63 V
0 3736 R
0 -63 V
860 440 M
( 0) Cshow
0.100 UL
LTb
1464 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 50) Cshow
0.100 UL
LTb
2068 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 100) Cshow
0.100 UL
LTb
2672 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 150) Cshow
0.100 UL
LTb
3276 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 200) Cshow
0.100 UL
LTb
3880 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 250) Cshow
0.100 UL
LTb
4483 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 300) Cshow
0.100 UL
LTb
5087 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 350) Cshow
0.100 UL
LTb
5691 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 400) Cshow
0.100 UL
LTb
6295 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 450) Cshow
0.100 UL
LTb
6899 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 500) Cshow
0.100 UL
LTb
0.100 UL
LTb
860 4439 N
860 640 L
6039 0 V
0 3799 V
-6039 0 V
Z stroke
LCb setrgbcolor
280 2539 M
currentpoint gsave translate -270 rotate 0 0 M
(RMSD \(A\)) Cshow
grestore
LTb
LCb setrgbcolor
3879 140 M
(Timestep) Cshow
LTb
3879 4739 M
(Chignolin-RMSD - 3 ns in a vacuum) Cshow
1.000 UP
0.100 UL
LTb
% Begin plot #1
0.200 UL
LT0
1.00 0.00 0.00 C /Helvetica findfont 200 scalefont setfont
LCb setrgbcolor
5996 4276 M
("rmsd.dat") Rshow
LT0
1.00 0.00 0.00 C 6116 4276 M
543 0 V
860 1018 M
12 389 V
12 -67 V
12 394 V
12 348 V
12 -206 V
12 202 V
13 -399 V
12 32 V
12 222 V
12 175 V
12 -103 V
12 118 V
12 -209 V
12 -114 V
12 592 V
12 -400 V
12 -58 V
12 110 V
12 -262 V
13 166 V
12 338 V
12 301 V
12 -746 V
12 967 V
12 -560 V
12 62 V
12 173 V
12 -20 V
12 -178 V
12 -324 V
12 334 V
12 -76 V
13 17 V
12 -159 V
12 -133 V
12 -235 V
12 241 V
12 -86 V
12 -605 V
12 -140 V
12 190 V
12 -17 V
12 -53 V
12 231 V
13 -199 V
12 117 V
12 -60 V
12 -34 V
12 770 V
12 -740 V
12 162 V
12 -314 V
12 219 V
12 382 V
12 -183 V
12 -486 V
12 587 V
13 -272 V
12 58 V
12 110 V
12 -364 V
12 176 V
12 -103 V
12 233 V
12 -138 V
12 603 V
12 -285 V
12 -24 V
12 418 V
12 634 V
13 -48 V
12 27 V
12 456 V
12 -154 V
12 -816 V
12 1083 V
12 -466 V
12 -267 V
12 -631 V
12 -123 V
12 50 V
12 365 V
12 -373 V
13 701 V
12 -83 V
12 -193 V
12 -371 V
12 -123 V
12 319 V
12 116 V
12 -44 V
12 -551 V
12 271 V
12 47 V
12 286 V
12 -595 V
13 267 V
12 -308 V
12 370 V
12 494 V
12 -252 V
12 -542 V
stroke 2092 1649 M
12 416 V
12 -217 V
12 -25 V
12 13 V
12 1016 V
12 -306 V
13 -149 V
12 -183 V
12 -618 V
12 388 V
12 -54 V
12 -175 V
12 650 V
12 -202 V
12 -326 V
12 161 V
12 -346 V
12 297 V
12 95 V
13 36 V
12 -164 V
12 337 V
12 250 V
12 -336 V
12 -254 V
12 -5 V
12 446 V
12 441 V
12 -97 V
12 -199 V
12 -127 V
12 26 V
13 409 V
12 128 V
12 -807 V
12 -191 V
12 136 V
12 58 V
12 565 V
12 -248 V
12 63 V
12 -23 V
12 182 V
12 191 V
12 -649 V
13 -338 V
12 227 V
12 -221 V
12 110 V
12 64 V
12 -252 V
12 66 V
12 -77 V
12 106 V
12 -262 V
12 48 V
12 20 V
12 491 V
13 -303 V
12 193 V
12 255 V
12 -68 V
12 -95 V
12 65 V
12 -259 V
12 237 V
12 -10 V
12 204 V
12 -157 V
12 207 V
12 -185 V
13 -68 V
12 290 V
12 -230 V
12 -1 V
12 -106 V
12 -203 V
12 475 V
12 79 V
12 -546 V
12 290 V
12 -257 V
12 160 V
13 -29 V
12 -298 V
12 362 V
12 143 V
12 -192 V
12 -190 V
12 512 V
12 -85 V
12 313 V
12 -550 V
12 -183 V
12 -108 V
12 176 V
13 -120 V
12 40 V
12 -98 V
12 33 V
12 -86 V
12 173 V
12 -95 V
12 1102 V
stroke 3348 3021 M
12 491 V
12 355 V
12 -271 V
12 -607 V
12 336 V
13 -165 V
12 -501 V
12 382 V
12 -812 V
12 568 V
12 552 V
12 -320 V
12 1132 V
12 -400 V
12 -228 V
12 -248 V
12 -129 V
12 -287 V
13 278 V
12 -258 V
12 -262 V
12 386 V
12 26 V
12 218 V
12 333 V
12 -279 V
12 944 V
12 -131 V
12 262 V
12 -531 V
12 -947 V
13 -4 V
12 99 V
12 559 V
12 420 V
12 -1348 V
12 30 V
12 500 V
12 -489 V
12 383 V
12 -816 V
12 581 V
12 -1 V
13 -557 V
12 389 V
12 -227 V
12 417 V
12 -281 V
12 -141 V
12 -26 V
12 577 V
12 565 V
12 -183 V
12 -328 V
12 -1041 V
12 428 V
13 110 V
12 909 V
12 -310 V
12 -230 V
12 -322 V
12 -56 V
12 -35 V
12 -21 V
12 -319 V
12 502 V
12 603 V
12 -266 V
12 -186 V
13 37 V
12 -710 V
12 642 V
12 -584 V
12 187 V
12 329 V
12 37 V
12 -46 V
12 -32 V
12 -545 V
12 -91 V
12 135 V
12 267 V
13 19 V
12 -158 V
12 -49 V
12 -322 V
12 118 V
12 -61 V
12 108 V
12 -151 V
12 184 V
12 197 V
12 -128 V
12 -234 V
12 -75 V
13 267 V
12 347 V
12 -20 V
12 -349 V
12 89 V
12 -74 V
12 -90 V
12 330 V
12 160 V
stroke 4604 2527 M
12 -264 V
12 472 V
12 -277 V
12 -312 V
13 132 V
12 104 V
12 -235 V
12 398 V
12 827 V
12 -316 V
12 -36 V
12 -1091 V
12 451 V
12 170 V
12 -183 V
12 300 V
13 -327 V
12 220 V
12 -280 V
12 131 V
12 -278 V
12 -67 V
12 145 V
12 -2 V
12 -35 V
12 481 V
12 55 V
12 -80 V
12 138 V
13 -70 V
12 -572 V
12 -167 V
12 404 V
12 -340 V
12 -27 V
12 247 V
12 293 V
12 521 V
12 -720 V
12 -417 V
12 352 V
12 -182 V
13 -49 V
12 -28 V
12 -142 V
12 128 V
12 237 V
12 -128 V
12 171 V
12 311 V
12 -131 V
12 -259 V
12 -191 V
12 390 V
12 -79 V
13 -442 V
12 91 V
12 -341 V
12 747 V
12 68 V
12 -360 V
12 -100 V
12 -431 V
12 201 V
12 319 V
12 121 V
12 87 V
12 110 V
13 401 V
12 -200 V
12 83 V
12 -355 V
12 476 V
12 -638 V
12 802 V
12 53 V
12 -414 V
12 132 V
12 -205 V
12 332 V
12 -159 V
13 273 V
12 -73 V
12 -288 V
12 37 V
12 219 V
12 550 V
12 -631 V
12 105 V
12 12 V
12 -90 V
12 124 V
12 2 V
13 -490 V
12 -429 V
12 35 V
12 23 V
12 432 V
12 574 V
12 -214 V
12 293 V
12 -360 V
12 361 V
12 -5 V
stroke 5860 3158 M
12 -142 V
12 -121 V
13 -174 V
12 211 V
12 50 V
12 -179 V
12 241 V
12 -30 V
12 -654 V
12 -70 V
12 -106 V
12 -141 V
12 87 V
12 102 V
12 -256 V
13 65 V
12 -197 V
12 34 V
12 193 V
12 -131 V
12 -115 V
12 165 V
12 -66 V
12 -156 V
12 206 V
12 -142 V
12 271 V
12 -327 V
13 242 V
12 236 V
12 78 V
12 -124 V
12 -437 V
12 75 V
12 288 V
12 -219 V
12 67 V
12 -278 V
12 -86 V
12 -85 V
12 339 V
13 390 V
12 626 V
12 -124 V
12 -125 V
12 -293 V
12 -445 V
12 62 V
12 -131 V
12 867 V
12 709 V
12 -380 V
12 229 V
13 -155 V
12 12 V
12 -415 V
12 289 V
12 -204 V
12 370 V
12 67 V
12 794 V
12 -470 V
12 -392 V
12 488 V
12 -108 V
12 -545 V
13 140 V
12 325 V
12 -357 V
12 -134 V
12 378 V
12 -121 V
12 120 V
12 -50 V
12 -696 V
12 501 V
12 -287 V
12 -228 V
12 415 V
13 -165 V
12 546 V
12 258 V
12 -416 V
12 -225 V
% End plot #1
stroke
0.100 UL
LTb
860 4439 N
860 640 L
6039 0 V
0 3799 V
-6039 0 V
Z stroke
1.000 UP
0.100 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
