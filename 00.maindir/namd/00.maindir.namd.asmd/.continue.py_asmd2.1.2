#!/usr/bin/env python
import sys,os
import os.path
from glob import glob
import fnmatch
import itertools
import numpy as np
from random import *
import datetime
import shutil
from lockfile import FileLock

lock = FileLock(__file__)
if lock.is_locked()==True: sys.exit()
lock.acquire()

my_dir = os.path.abspath(os.path.dirname(__file__))
now=datetime.datetime.now()
now=now.strftime("%Y%m%dt%H%M")
num='xxcstagexx'

info_seed_w={}
info_folder={}
quota=xxquotaxx*xxhowmanyxx

def pack():
    acc=[]
    for path in glob(os.path.join(my_dir,'%s/*/*-tef.dat.*' % num)):
        print path
        folder = path.split('/')[-2]
        seed = path.split('/')[-1].split('.')[2]
        print folder,seed
        sample_i = np.loadtxt(path)
        #os.remove(path)
        acc.append(sample_i)
        info_seed_w[seed]=sample_i
        info_folder[seed]=folder
    data = np.array(acc)
    if len(data)==quota:
        #np.save('%s_%s' % (num,now),data)
        pass
    else:
        print "not all trajectories acquired yet"
    return data

count=0
for path in glob(os.path.join(my_dir,'%s/*/*-tef.dat.*' % num)):
    count+=1

if count==quota: data = pack()
elif count!=quota: sys.exit()

# variables, simulation parameters;  10,000 steps
v    = xxvelapsxx        ;#  20 A in 20 ps, 1.0000 A/ps
dt   = xxdtxx              ;#  2 fs * 50(smd.tcl) / 1000, 0.1 ps
beta = -0.6              ;#  8.31 J/K*mol, 4.184 J/cal -> .6 kcal/mol

# columns of data 3D array
f    = data[::,::,3]
ext  = data[::,::,1]
fvdt = f*v*dt
work = np.cumsum(fvdt,axis=1)
betawork = beta*work
ebw  = np.exp(betawork)
meanebw  = ebw.mean(axis=0)
lnmeanebw= np.log(meanebw)
deltaf= (1/beta)*lnmeanebw

JA=deltaf[-1]
sdwf={}

def select_traj(dct,JA):
    def calc_work(forces):
        fvdt = forces*v*dt
        work = np.cumsum(fvdt)
        return work[-1]
    for keys,values in dct.iteritems():
        force=values[::,3]
        wf=calc_work(force)
        sdwf[wf]=keys
    cl=sdwf.get(JA, sdwf[min(sdwf.keys(), key=lambda k: abs(k-JA))])
    return cl

idt=select_traj(info_seed_w,JA)
folder=info_folder[idt]

text=str(sdwf)+'\n'+str(JA)+'\n'+str(idt)+'\n'+folder+ \
        '\n'+str(info_folder)
rfile = open('%s-trajselect.txt' % num,'w')
rfile.write(text)
rfile.close()

nextnum=str(int(num)+1).zfill(2)

f_coor=os.path.join(my_dir,num,folder,'daOut.coor.%s' % idt)
d_coor=os.path.join(my_dir,nextnum,'00.coor')
f_vel=os.path.join(my_dir,num,folder,'daOut.vel.%s' % idt)
d_vel=os.path.join(my_dir,nextnum,'00.vel')

f_list=[f_coor,f_vel]
d_list=[d_coor,d_vel]
for f,d in zip(f_list,d_list):
    shutil.copy(f,d)
'''

acs=[]
def qsub_job(s,v,st):
    for root, dirnames, filenames in os.walk(my_dir):
        for filename in fnmatch.filter(filenames,'job.sh'):
            num=(root.split('/')[-3])
            sol=(root.split('/')[-4]).split('.')[1]
            stg=(root.split('/')[-2])
            if (num==v) and (sol==s) and (stg==st):
                jobs=os.path.join(root,filename)
                jtype=v+s+st
                acs.append(jtype)
                root='/'+'/'.join(root.split('/')[1:])
                jobs=os.path.join(root,'job.sh')
                print root
                print jobs
                os.chdir(root)
                os.system('qsub %s' % jobs)
                #os.system('./job.sh &')

solvents   = ['xxenvironxx']
#solvents   = ['vac','imp','exp']
velocities = ['xxvelxx']
stages     = [nextnum]
# MAIN SUBMISSION CALL
# alternatively, qsub_job('01','vac')
if len(data)==quota:
    [qsub_job(s,v,st) for s in solvents for v in velocities for st in stages]

print len(acs)
result={}
def count():
    for cond in acs:
        if cond not in result:
            result[cond]= 0
        result[cond] += 1
count()

os.chdir(my_dir)
for key in result:
    print key + '  ' + str(result[key])
    t = key + '  ' + str(result[key])
'''
